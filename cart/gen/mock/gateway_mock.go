// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Ralphbaer/hash/cart/gateway (interfaces: DiscountServiceGateway)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDiscountServiceGateway is a mock of DiscountServiceGateway interface
type MockDiscountServiceGateway struct {
	ctrl     *gomock.Controller
	recorder *MockDiscountServiceGatewayMockRecorder
}

// MockDiscountServiceGatewayMockRecorder is the mock recorder for MockDiscountServiceGateway
type MockDiscountServiceGatewayMockRecorder struct {
	mock *MockDiscountServiceGateway
}

// NewMockDiscountServiceGateway creates a new mock instance
func NewMockDiscountServiceGateway(ctrl *gomock.Controller) *MockDiscountServiceGateway {
	mock := &MockDiscountServiceGateway{ctrl: ctrl}
	mock.recorder = &MockDiscountServiceGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDiscountServiceGateway) EXPECT() *MockDiscountServiceGatewayMockRecorder {
	return m.recorder
}

// GetDiscount mocks base method
func (m *MockDiscountServiceGateway) GetDiscount(arg0 context.Context, arg1 int32) (float32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiscount", arg0, arg1)
	ret0, _ := ret[0].(float32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiscount indicates an expected call of GetDiscount
func (mr *MockDiscountServiceGatewayMockRecorder) GetDiscount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiscount", reflect.TypeOf((*MockDiscountServiceGateway)(nil).GetDiscount), arg0, arg1)
}
